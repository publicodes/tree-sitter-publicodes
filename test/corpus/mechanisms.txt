================================================================================
Array-like mechanism
================================================================================

a:
  somme:
    - 10.5
    - -10
    - produit:
      - 10.5
      - (-10)
      - a


--------------------------------------------------------------------------------
(source_file
  (rule
    (name)
    (rule_body
      (mechanism
        (m_array
          (number)
          (ar_unary_expression
            (number))
          (mechanism
            (m_array
              (number)
              (ar_unary_expression
                (number))
              (reference
                (name)))))))))



================================================================================
Array-like mechanism - 2
================================================================================

b:
  toutes ces conditions:
    - oui
    - b > 10
    -
      une de ces conditions:
        - a > 10
        - a < -10
        - a = 0
--------------------------------------------------------------------------------
  (source_file
    (rule
      (name)
      (rule_body
        (mechanism
          (m_array
            (boolean)
            (comparison
              (reference
                (name))
              (number))
            (mechanism
              (m_array
                (comparison
                  (reference
                    (name))
                  (number))
                (comparison
                  (reference
                    (name))
                  (ar_unary_expression
                    (number)))
                (comparison
                  (reference
                    (name))
                  (number)))))))))


================================================================================
Array-like mechanism - 3
================================================================================

c:
  le maximum de:
  - valeur: 5
    plafond: 4
  - 20
  - 30

--------------------------------------------------------------------------------

  (source_file
    (rule
      (name)
      (rule_body
        (mechanism
          (m_array
            (mechanism
              (m_unary
                (number)))
            (mechanism
              (m_unary
                (number)))
            (number)
            (number))))))

================================================================================
Array-like mechanism - 4
:skip
================================================================================

a:
  produit:
    - plafond
    - a
--------------------------------------------------------------------------------

================================================================================
Unary mechanism
================================================================================

a:
  valeur: -10
  plafond: 10
  plancher: -10
  applicable si: a > 0
  non applicable si: non
  par défaut: 0

--------------------------------------------------------------------------------

    (source_file
      (rule
        (name)
        (rule_body
          (mechanism
            (m_unary
              (ar_unary_expression
                (number))))
          (mechanism
            (m_unary
              (number)))
          (mechanism
            (m_unary
              (ar_unary_expression
                (number))))
          (mechanism
            (m_unary
              (comparison
                (reference
                  (name))
                (number))))
          (mechanism
            (m_unary
              (boolean)))
          (mechanism
            (m_unary
              (number))))))
================================================================================
Unité
================================================================================

a:
  unité: €/mois

--------------------------------------------------------------------------------

(source_file
  (rule
    rule_name: (dotted_name (name))
    body: (rule_body
      (mechanism
        (m_unité
          m_name: (unité)
          (units
            numerators: (unit)
            denominators: (unit)))))))

================================================================================
Inversion
================================================================================

a:
  inversion numérique:
    - a
    - b

--------------------------------------------------------------------------------
    (source_file
      (rule
        rule_name: (dotted_name (name))
        body: (rule_body
          (mechanism
            (m_inversion
              m_name: (inversion_numérique)
              (reference
                (dotted_name (name)))
              (reference
                (dotted_name (name))))))))


================================================================================
Inversion - KO
:error
================================================================================

a:
  inversion avec:
  - a + 5

--------------------------------------------------------------------------------


================================================================================
Contexte
================================================================================
a:
  contexte:
    b : 10
    c:
      somme:
      - 10
--------------------------------------------------------------------------------
  (source_file
    (rule
      (dotted_name (name))
      (rule_body
        (mechanism
          (m_contexte
            (contexte)
            (reference
              (dotted_name (name)))
            (number)
            (reference
              (dotted_name (name)))
            (mechanism
              (m_array
                (m_array_name)
                (number))))))))


================================================================================
Variations
================================================================================

a:
  variations:
    - si: a > 10
      alors: 10
    - si: a < 10
      alors: 0

b:
  variations:
    - si:
        toutes ces conditions:
        - a = 10
        - b = 'oui'
      alors: 10
    - sinon: 5

--------------------------------------------------------------------------------

(source_file
  (rule
    rule_name: (dotted_name
      (name))
    body: (rule_body
      (mechanism
        (m_variations
          m_name: (variations)
          (m_variation_si
            (si)
            condition: (comparison
              (reference
                (dotted_name
                  (name)))
              (number))
            (alors)
            consequence: (number))
          (m_variation_si
            (si)
            condition: (comparison
              (reference
                (dotted_name
                  (name)))
              (number))
            (alors)
            consequence: (number))))))
  (rule
    rule_name: (dotted_name
      (name))
    body: (rule_body
      (mechanism
        (m_variations
          m_name: (variations)
          (m_variation_si
            (si)
            condition: (mechanism
              (m_array
                m_name: (m_array_name)
                (comparison
                  (reference
                    (dotted_name
                      (name)))
                  (number))
                (comparison
                  (reference
                    (dotted_name
                      (name)))
                  (string))))
            (alors)
            consequence: (number))
          (m_variation_sinon
            (sinon)
            (number)))))))

================================================================================
Variations - 2
================================================================================

dirigeant . indépendant . revenu professionnel:
  variations:
    - si: entreprise . imposition = 'IS'
      alors:
        somme:
        - rémunération . net
        - cotisations et contributions . non déductibles
    - sinon: entreprise . résultat fiscal

---------------------------------------------------
    (source_file
      (rule
        (name)
        (name)
        (name)
        (rule_body
          (mechanism
            (m_variations
              (comparison
                (reference
                  (name)
                  (name))
                (string))
              (mechanism
                (m_array
                  (reference
                    (name)
                    (name))
                  (reference
                    (name)
                    (name))))
              (reference
                (name)
                (name)))))))

================================================================================
Durée
================================================================================

a:
  durée:
    depuis: 10/10/2010
    jusqu'à: 10/10/2011
    unité: mois

b:
  durée:
    depuis: début de contrat

c:
  durée:
    jusqu'à: fin de contrat
    unité: année civile
--------------------------------------------------------------------------------

(source_file
  (rule
    rule_name: (dotted_name
      (name))
    body: (rule_body
      (mechanism
        (m_durée
          m_name: (durée)
          (depuis)
          from: (date)
          (jusqu_à)
          to: (date)
          (unité)
          unit: (m_durée_units)))))
  (rule
    rule_name: (dotted_name
      (name))
    body: (rule_body
      (mechanism
        (m_durée
          m_name: (durée)
          (depuis)
          from: (reference
            (dotted_name
              (name)))))))
  (rule
    rule_name: (dotted_name
      (name))
    body: (rule_body
      (mechanism
        (m_durée
          m_name: (durée)
          (jusqu_à)
          to: (reference
            (dotted_name
              (name)))
          (unité)
          unit: (m_durée_units))))))

================================================================================
Barème et assimilé
================================================================================

a:
  barème:
    assiette: 50 €
    tranches:
    - taux: 10%
      plafond: 100 €
    - taux: 20%
      plafond: 200 €

b:
  taux progressif:
    assiette: 50 €
    multiplicateur: PASS
    tranches:
    -
        plafond: 100 €
        taux: 10%

    -
        plafond: 200 €
        taux: 20%
    - taux: 100%

--------------------------------------------------------------------------------

 (source_file
      (rule
        rule_name: (dotted_name (name))
        (rule_body
          (mechanism
            (m_barème_like
              (number
                (units
                  (unit)))
              (number
                (units
                  (unit)))
              (number
                (units
                  (unit)))
              (number
                (units
                  (unit)))
              (number
                (units
                  (unit)))))))
      (rule
        (name)
        (rule_body
          (mechanism
            (m_barème_like
              (number
                (units
                  (unit)))
              (reference
                (name))
              (number
                (units
                  (unit)))
              (number
                (units
                  (unit)))
              (number
                (units
                  (unit)))
              (number
                (units
                  (unit)))
              (number
                (units
                  (unit))))))))

